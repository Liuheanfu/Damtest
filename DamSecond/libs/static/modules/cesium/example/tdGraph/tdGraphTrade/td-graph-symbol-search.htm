<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta charset="utf-8"/>
  <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no"/>
  <title>符号库查询</title>
  <!--引入行业标绘脚本库-->
  <!-- jquery -->
  <script src="http://localhost:8080/static/libs/cdn/jquery/jquery-1.12.4.min.js"></script>
  <!-- cesium -->
  <script src="http://localhost:8080/static/libs/cdn/cesium/Cesium.js"></script>
  <link rel="stylesheet" href="http://localhost:8080/static/libs/cdn/cesium/Widgets/widgets.css"/>
  <link rel="stylesheet" href="http://localhost:8080/static/libs/cdn/cesium/MapGIS/css/mapgis.css"/>
  <!-- plot -->
  <script src="http://localhost:8080/static/libs/cdn/webclient-plot/webclient-plot.min.js"></script>
  <!-- panel -->
  <script src="http://localhost:8080/static/libs/cdn/webclient-plot-plugins/PlotPanel/index.js"></script>
  <link rel="stylesheet" href="http://localhost:8080/static/libs/cdn/webclient-plot-plugins/PlotPanel/index.css"/>
  <!-- menu -->
  <script src="http://localhost:8080/static/libs/cdn/webclient-plot-plugins/PlotMenu/index.js"></script>
  <link rel="stylesheet" href="http://localhost:8080/static/libs/cdn/webclient-plot-plugins/PlotMenu/index.css">
  <!--示例公共样式-->
  <link href="https://cdn.bootcdn.net/ajax/libs/font-awesome/6.2.0/css/all.min.css" rel="stylesheet" />
  <link rel="stylesheet" href="http://localhost:8080/static/libs/css/style.css"/>
  <link rel="stylesheet" href="http://localhost:8080/static/libs/css/plot/symbol-search.css"/>
  <script>
      'use strict';

      //定义三维视图的主要类
      let viewer, options;

      //地图初始化函数
      function init() {
          //初始化三维球体
          initViewer();
          //添加天地图
          addTDT();
          //初始化标绘符号管理器，资源加载完毕后初始化示例UI
          initPlotManager();
          //视点跳转
          flyTo();
      }

      //初始化三维球体
      function initViewer() {
          viewer = new Cesium.Viewer('mapgis-3d-viewer', {});
          //显示鼠标位置
          viewer.showPosition();
          //抗锯齿处理
          viewer.scene.fxaa = true;
          viewer.scene.postProcessStages.fxaa.enabled = true;
      }

      //加载天地图底图
      function addTDT() {
          let options = {
              //天地图URL，开发token （请到天地图官网申请自己的开发token，自带token仅做功能验证随时可能失效）
              url: "http://t0.tianditu.gov.cn/vec_w/wmts?tk=9c157e9585486c02edf817d2ecbc7752",
              //图层名称，vec：矢量底图、img：卫星影像底图、cva: 矢量注记图层（中文）、eva: 矢量注记图层（英文）、cia: 注记图层（中文）、eia: 注记图层（英文）、ter: 地形晕渲底图、cta: 注记（中文）、ibo: 全球国界
              layer: "vec",
              //瓦片样式
              style: "default",
              //比例尺
              tileMatrixSetID: "w",
              //请求格式
              format: "tiles"
          }
          viewer.imageryLayers.addImageryProvider(new Cesium.WebMapTileServiceImageryProvider(options));
      }

      //初始化标绘符号管理器
      function initPlotManager() {
          //标绘工具绑定在window.Zondy上
          const Zondy = window.Zondy;
          // 获取标绘类
          const Plot = Zondy.Plot;
          const {
              // 符号管理器
              SymbolManager
          } = Plot;
          // 符号库路径
          const symbolUrl = `http://localhost:8080/static/libs/cdn/webclient-plot/symbols.json`;
          const symbolOptions = {
              // 符号库字体路径
              fontURL: `http://localhost:8080/static/libs/cdn/webclient-plot/`,
              // 静态资源路径
              baseUrl: `http://localhost:8080/static/libs/cdn/webclient-plot/assets/`,
          };

          // 创建符号管理器
          // 1.可传入符号库url链接
          let manager = new SymbolManager(symbolUrl, symbolOptions);
          // 2.可传入json对象
          //let manager = new SymbolManager(symbolObject, symbolOptions);
          // 请求获取符号库
          manager.getSymbols().then(() => {
                  //初始化示例UI
                  initUI(manager);
              }
          );
      }

      /**
       * 初始化UI
       * @param manager 符号管理器对象
       * */
      function initUI(manager) {
          // ui 插件
          const {PlotMenu, PlotPanel} = window.webclientPlot;
          //初始化示例UI
          //创建右侧符号显示面板
          let panel = new PlotPanel("plot-show-table", {})
          let listValue = []
          if (panel) {
              const body = panel.getBody()
              for (let i = 0; i < 4; i++) {
                  let div = document.createElement('div')
                  div.setAttribute("class", "list")
                  if (i === 3) {
                      let img = document.createElement("img")
                      div.appendChild(img)
                  } else {
                      let div1 = document.createElement('div')
                      div1.setAttribute("class", "key")
                      let div2 = document.createElement('div')
                      div2.setAttribute("class", "key")
                      div.appendChild(div1)
                      div.appendChild(div2)
                  }
                  listValue.push(div)
                  body.appendChild(div)
              }
          }
          // 创建左侧符号目录树
          new PlotMenu(manager, (id) => {
              // 获取符号库节点
              const node = manager.getLeafByID(id)
              listValue.forEach((list, i) => {
                  if (i === 0) {
                      Array.from(list.children)[0].innerText = "符号id"
                      Array.from(list.children)[1].innerText = node.id
                  }
                  if (i === 1) {
                      Array.from(list.children)[0].innerText = "符号名称"
                      Array.from(list.children)[1].innerText = node.name
                  }
                  if (i === 2) {
                      Array.from(list.children)[0].innerText = "符号类型"
                      Array.from(list.children)[1].innerText = node.type
                  }
                  if (i === 3) {
                      Array.from(list.children)[0].parentNode.removeChild(list.children[0])
                      const img = manager.getImageByID(id)
                      list.appendChild(img)
                  }
              })
          });
      }
      //视点跳转
      function flyTo() {
          viewer.camera.flyTo({
              destination: Cesium.Cartesian3.fromDegrees(114, 29.83, 18000),
              duration: 2,
              orientation : {
                  heading : Cesium.Math.toRadians(0),
                  pitch : Cesium.Math.toRadians(-40.0),
                  roll : 0.0
              }
          });
      }
  </script>
</head>

<body onload="init()">
<div id="mapgis-3d-viewer">
  <div id="side"></div>
  <div id="content">
    <div id="plot-show-table">
    </div>
  </div>
</div>
</body>
</html>
