<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
  <meta charset='utf-8'/>
  <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no'/>
  <title>文本</title>
  <!--引入第三方的jquery脚本库-->
  <script src="http://localhost:8080/static/libs/cdn/cesium/Cesium.js"></script>
  <!--cesium样式-->
  <link rel="stylesheet" href="http://localhost:8080/static/libs/cdn/cesium/Widgets/widgets.css"/>
  <link rel="stylesheet" href="http://localhost:8080/static/libs/cdn/cesium/MapGIS/css/mapgis.css"/>
  <!--示例中面板、按钮等，第三方layui的js库与css样式-->
  <script src="http://localhost:8080/static/libs/cdn/layui/layui.js"></script>
  <link rel="stylesheet" href="http://localhost:8080/static/libs/cdn/layui/css/layui.css"/>
  <!--示例公共样式-->
  <link rel="stylesheet" href="http://localhost:8080/static/libs/css/style.css"/>
  <link rel="stylesheet" href="http://localhost:8080/static/libs/css/graphic.css"/>
  <script>
      'use strict';
      //取得jquery对象
      let $ = layui.$;
      //颜色管理器对象
      let colorpicker = layui.colorpicker;
      //定义三维视图的主要类
      let viewer, options, graphicsLayer, label;
      //默认添加的文本参数
      let defaultLabelOptions = {
          showBackGround: false,
          backgroundColor: '#ffffff',
          backgroundPadding: '5,5',
          fillColor: '#9dfafe',
          outlineShow: false,
          outlineColor: '#000000',
          outlineWidth: '1',
          font: '30px sans-serif',
          offsetHeight: 400,
          horizontalOrigin: 0,
          verticalOrigin: 0,
          pixelOffsetX: 0,
          pixelOffsetY: 0
      };

      //地图初始化函数
      function init() {
          //初始化球体
          initViewer();
          //添加天地图
          addTDT();
          //初始化标绘图层
          addGraphicLayer();
          //添加文字
          addLabel();
          //添加包含外边框的文字
          addOutLineLabel();
          //文本包含背景
          addBackGroundLabel();
          //视点跳转
          flyTo();
          //给面板绑定事件
          initPanelEvent();
      }

      //构造三维视图类（视图容器div的id，三维视图设置参数）
      function initViewer() {
          viewer = new Cesium.Viewer('mapgis-3d-viewer', {});
          //显示鼠标位置
          viewer.showPosition();
      }

      //加载天地图底图
      function addTDT() {
               let options = {
              //天地图URL，开发token （请到天地图官网申请自己的开发token，自带token仅做功能验证随时可能失效）
              url: "http://t0.tianditu.gov.cn/vec_w/wmts?tk=9c157e9585486c02edf817d2ecbc7752",
              //图层名称，vec：矢量底图、img：卫星影像底图、cva: 矢量注记图层（中文）、eva: 矢量注记图层（英文）、cia: 注记图层（中文）、eia: 注记图层（英文）、ter: 地形晕渲底图、cta: 注记（中文）、ibo: 全球国界
              layer: "vec",
              //瓦片样式
              style: "default",
              //比例尺
              tileMatrixSetID: "w",
              //请求格式
              format: "tiles"
          }
          viewer.imageryLayers.addImageryProvider(new Cesium.WebMapTileServiceImageryProvider(options));
      }

      //视点跳转
      function flyTo() {
          viewer.camera.flyTo({
              destination: Cesium.Cartesian3.fromDegrees(114.40525542642715, 30.4630696482677, 14000),
              duration: 2
          });
      }

      //初始化标绘图层
      function addGraphicLayer() {
          graphicsLayer = new Cesium.GraphicsLayer(viewer, {
              //添加标绘完毕后，更新当前标绘对象
              getGraphic: function (graphic) {
                  label = graphic;
              },
              //点击标绘对象的回调函数
              clickGraphic: function (graphic) {
                  if (!graphic){
                      return;
                  }
                  label = graphic;
                  //更新编辑面板的值
                  let fillColor = label.style.fillColor.toCssHexString();
                  let outlineColor = label.style.outlineColor ? label.style.outlineColor.toCssHexString() : Cesium.Color.WHITE.toCssHexString();
                  let backgroundColor = label.style.backgroundColor ? label.style.backgroundColor.toCssHexString() : '#33332C';
                  let formParam = {
                      "font": label.style.font,
                      "outlineWidth": label.style.outlineWidth,
                      "offsetHeight": label.style.offsetHeight,
                      "pixelOffsetX": label.style.pixelOffset.x,
                      "pixelOffsetY": label.style.pixelOffset.y,
                      "horizontalOrigin": label.style.horizontalOrigin,
                      "verticalOrigin": label.style.verticalOrigin,
                      "showBackground": label.style.showBackground,
                      "backgroundPadding": label.style.backgroundPadding.x+','+label.style.backgroundPadding.y,
                      "outlineColor": outlineColor,
                      "fillColor": fillColor,
                      "backgroundColor": backgroundColor,
                      "style": label.style.style
                  }
                  layui.form.val('example', formParam);
                  if(label.style.showBackground){
                      $('.bgOptionItem').show();
                  }else{
                      $('.bgOptionItem').hide();
                  }
                  if(label.style.style!==0){
                      $('.outlineOptionItem').show();
                  }else{
                      $('.outlineOptionItem').hide();
                  }
                  //3个颜色选择器
                  initUIColorpicker(fillColor, outlineColor, backgroundColor);
                  //这个时候展开编辑面板
                  $('#editPanel').show();
              }
          });
      }

      //第一个label
      function addLabel() {
          let labelGraphic = new Cesium.Graphic({
              //标绘类型
              type: 'label',
              //标绘位置
              positions: [Cesium.Cartesian3.fromDegrees(114.40525542642715, 30.4630696482677, 0)],
              //标绘样式
              style: {
                  //文字内容
                  text: '中地数码MapGIS',
                  //字体和文字大小
                  font: '50px sans-serif',
                  //文字颜色
                  fillColor: Cesium.Color.DARKRED,
                  //离地高度
                  offsetHeight: 400
              }
          })
          //将标绘点添加入标绘图层
          graphicsLayer.addGraphic(labelGraphic);
      }

      //添加包含外边框的文字
      function addOutLineLabel() {
          let labelGraphic2 = new Cesium.Graphic({
              //标绘类型
              type: 'label',
              //标绘位置
              positions: [Cesium.Cartesian3.fromDegrees(114.36325542642715, 30.4630096482677, 0)],
              //标绘样式
              style: {
                  //文字内容
                  text: '文本包含外边框',
                  //文字大小和字体
                  font: '30px 微软雅黑',
                  //文字颜色
                  fillColor: Cesium.Color.INDIANRED,
                  //显示文字外边框
                  style: Cesium.LabelStyle.FILL_AND_OUTLINE,
                  //外边框颜色
                  outlineColor: Cesium.Color.KHAKI,
                  //外边框宽度
                  outlineWidth: 10,
                  //离地高度
                  offsetHeight: 400
              }
          })
          graphicsLayer.addGraphic(labelGraphic2);
      }

      //文本包含背景
      function addBackGroundLabel() {
          let labelGraphic3 = new Cesium.Graphic({
              type: 'label',
              positions: [Cesium.Cartesian3.fromDegrees(114.40515542642715, 30.4330696482677, 0)],
              style: {
                  //文字内容
                  text: '文本包含背景',
                  //文字大小和字体、
                  font: '30px sans-serif',
                  //文字颜色
                  fillColor: Cesium.Color.INDIANRED,
                  //显示文字背景
                  showBackground: true,
                  //背景颜色
                  backgroundColor: Cesium.Color.IVORY,
                  //背景间距
                  backgroundPadding: new Cesium.Cartesian2(7, 5),
                  //离地高度
                  offsetHeight: 400
              }
          })
          graphicsLayer.addGraphic(labelGraphic3);
      }

      //初始化示例UI
      function initPanelEvent() {

          initUIColorpicker();

          //字体
          $("#label-font").bind("input propertychange", function () {
              label.style.font = checkFont($('#label-font').val())
          })

          //外边框宽度
          $("#label-outlineWidth").bind("input propertychange", function () {
              label.style.outlineWidth = Number($('#label-outlineWidth').val());
          })

          //离地高度
          $("#label-offsetHeight").bind("input propertychange", function () {
              label.style.offsetHeight = Number($('#label-offsetHeight').val());
          })

          //像素偏移
          $("#label-pixelOffsetX").bind("input propertychange", function () {
              label.style.pixelOffset = new Cesium.Cartesian2(Number($('#label-pixelOffsetX').val()), Number($('#label-pixelOffsetY').val()));
          })
          $("#label-pixelOffsetY").bind("input propertychange", function () {
              label.style.pixelOffset = new Cesium.Cartesian2(Number($('#label-pixelOffsetX').val()), Number($('#label-pixelOffsetY').val()));
          })

          //背景内边距
          $("#label-backgroundPadding").bind("input propertychange", function () {
              let arr = $('#label-backgroundPadding').val().split(',');
              if(arr.length===2){
                  let y = Number(arr[0]);
                  let x = Number(arr[1]);
                  label.style.backgroundPadding = new Cesium.Cartesian2(x,y);
              }else{
                  label.style.backgroundPadding = new Cesium.Cartesian2(5,5);
              }
          })

          //文本水平方向放置位置
          layui.form.on('select(horizontalOrigin)', function (data) {
              label.style.horizontalOrigin = Number($("#label-horizontalOrigin").val());
          });
          //文本垂直方向放置位置
          layui.form.on('select(verticalOrigin)', function (data) {
              label.style.verticalOrigin = Number($("#label-verticalOrigin").val());
          });
          //文本样式的更改
          layui.form.on('select(labelStyle)', function (data) {
              label.style.style = Number($("#label-labelStyle").val());
              if($('#label-labelStyle').val()==='0'){
                  $('.outlineOptionItem').hide();
              }else{
                  $('.outlineOptionItem').show();
              }
          });

          //显示背景的开关事件
          layui.form.on('switch(showBgSwitch)', function(data){
              if(this.checked){
                  $('.bgOptionItem').show();
              }else{
                  $('.bgOptionItem').hide();
              }
              label.style.showBackground = this.checked;
          });
      }

      //删除文本
      function deleteLabel(){
          label.remove();
          $('#editPanel').hide();
      }

      // 初始化Colorpicker，有3个颜色选择器
      function initUIColorpicker(fillColor, outlineColor, backgroundColor) {
          //填充颜色
          colorpicker.render({
              elem: '#label-fillColor'
              , color: fillColor
              , done: function (color) {
                  $('#label-fillColor-input').val(color);
                  label.style.fillColor = Cesium.Color.fromCssColorString(color);
              }
          });
          //外边框颜色
          colorpicker.render({
              elem: '#label-outline-color'
              , color: outlineColor
              , done: function (color) {
                  $('#label-outline-color-input').val(color);
                  label.style.outlineColor = Cesium.Color.fromCssColorString(color);
              }
          });
          //背景颜色
          colorpicker.render({
              elem: '#label-background-color'
              , color: backgroundColor
              , done: function (color) {
                  $('#label-background-color-input').val(color);
                  label.style.backgroundColor = Cesium.Color.fromCssColorString(color);
              }
          });
      }

      // 开始绘制
      function startDrawing() {
          graphicsLayer.startDrawing({
              type: 'label',
              isContinued: false,
              style: {
                  text: '这是新的文本',
                  font: '30px sans-serif',
                  fillColor: Cesium.Color.fromCssColorString('#9dfafe'),
                  offsetHeight: 400
              }
          });
      }

      //验证字体，如果不符合规范，那么设置成默认字体，否则会报错
      function checkFont(font) {
          let fontArr = font.trim().split(' ');
          if (fontArr && fontArr.length === 2) {
              let size = fontArr[0];
              let family = fontArr[1];
              let sizeN = parseInt(size);
              if (sizeN > 0) {
                  // 拼接成类似'30px sans-serif'格式
                  return `${sizeN}px ${family}`;
              }
          }
          return '30px sans-serif';
      }

      function stopDrawing() {
          graphicsLayer.stopDrawing();
      }
  </script>
</head>

<body onload="init()">
<div id="mapgis-3d-viewer"></div>
<div class="layui-panel layui-panel-right" style="text-align: center;width: 140px;padding: 10px;">
  <button onclick="startDrawing()" style="margin:0 auto !important;" type="button" class="layui-btn layui-btn-normal graphic-button-margin">添加文本</button>
</div>
<div class="layui-panel layui-panel-right" id="editPanel" style="display: none;top: 70px;">
  <form class="layui-form" action="" lay-filter="example">
    <div class="sample-main-panel">
      <div class="layui-form-item">
        <label class="layui-form-label">填充颜色</label>
        <div class="layui-input-inline" style="width: 145px;margin-left:10px;">
          <input disabled type="text" placeholder="填充颜色" class="layui-input" name="fillColor" id="label-fillColor-input">
        </div>
        <div class="layui-inline">
          <div id="label-fillColor"></div>
        </div>
      </div>
      <div class="layui-form-item">
        <label class="layui-form-label">文本样式</label>
        <div class="layui-input-block">
          <select id="label-labelStyle" name="style" lay-filter="labelStyle">
            <option value="0">仅填充</option>
            <option value="2">填充+外边框</option>
          </select>
        </div>
      </div>
      <div class="layui-form-item outlineOptionItem" style="display: none">
        <label class="layui-form-label">外边框颜色</label>
        <div class="layui-input-inline"  style="width: 145px;margin-left:10px;">
          <input disabled type="text" placeholder="外边框颜色" class="layui-input" name="outlineColor"
                 id="label-outline-color-input">
        </div>
        <div class="layui-inline">
          <div id="label-outline-color"></div>
        </div>
      </div>
      <div class="layui-form-item outlineOptionItem" style="display: none">
        <label class="layui-form-label">外边框宽度</label>
        <div class="layui-input-block">
          <input id="label-outlineWidth" value="" type="text" name="outlineWidth" lay-verify="title" autocomplete="off"
                 placeholder="" class="layui-input">
        </div>
      </div>
      <div class="layui-form-item">
        <label class="layui-form-label">显示背景</label>
        <div class="layui-input-inline" style="margin-left:10px;width:120px;">
          <input type="checkbox" lay-filter="showBgSwitch" name="showBackground" lay-skin="switch" lay-text="开启|关闭">
        </div>
      </div>
      <div class="layui-form-item bgOptionItem" style="display: none;">
        <label class="layui-form-label">背景颜色</label>
        <div class="layui-input-inline"  style="width: 145px;margin-left:10px;">
          <input disabled type="text" value="#ffffff" placeholder="背景颜色" class="layui-input" name="backgroundColor"
                 id="label-background-color-input">
        </div>
        <div class="layui-inline">
          <div id="label-background-color"></div>
        </div>
      </div>
      <div class="layui-form-item bgOptionItem" style="display: none;">
        <label class="layui-form-label">背景内边距</label>
        <div class="layui-input-block">
          <input id="label-backgroundPadding" type="text" value="5,5" name="backgroundPadding" lay-verify="title"
                 autocomplete="off" placeholder="5,5" class="layui-input">
        </div>
      </div>
      <div class="layui-form-item">
        <label class="layui-form-label">字体</label>
        <div class="layui-input-block">
          <input id="label-font" value="30px sans-serif" type="text" name="font"  autocomplete="off"
                 placeholder="30px sans-serif" class="layui-input">
        </div>
      </div>
      <div class="layui-form-item">
        <label class="layui-form-label">离地高度</label>
        <div class="layui-input-block">
          <input id="label-offsetHeight" type="text" value="400" name="offsetHeight"
                 autocomplete="off" placeholder="400" class="layui-input">
        </div>
      </div>
      <div class="layui-form-item">
        <label class="layui-form-label">水平放置</label>
        <div class="layui-input-block">
          <select id="label-horizontalOrigin" name="horizontalOrigin" lay-filter="horizontalOrigin">
            <option value="-1">靠左</option>
            <option value="0">中间</option>
            <option value="1">靠右</option>
          </select>
        </div>
      </div>
      <div class="layui-form-item">
        <label class="layui-form-label">垂直放置</label>
        <div class="layui-input-block">
          <select id="label-verticalOrigin" name="verticalOrigin" lay-filter="verticalOrigin">
            <option value="1">顶部</option>
            <option value="0">中间</option>
            <option value="-1">底部</option>
            <option value="2">文字基线</option>
          </select>
        </div>
      </div>
      <div class="layui-form-item">
        <label class="layui-form-label">像素偏移X</label>
        <div class="layui-input-block">
          <input id="label-pixelOffsetX" value="0" type="text" name="pixelOffsetX" autocomplete="off"
                 placeholder="4" class="layui-input">
        </div>
      </div>
      <div class="layui-form-item">
        <label class="layui-form-label">像素偏移Y</label>
        <div class="layui-input-block">
          <input id="label-pixelOffsetY" value="0" type="text" name="pixelOffsetY" autocomplete="off"
                 placeholder="4" class="layui-input">
        </div>
      </div>
    </div>
    <div class="sample-button-panel">
      <button onclick="$('#editPanel').hide()" style="float: right;width:auto;margin-right: 0 !important;" type="button" class="layui-btn layui-btn-normal graphic-button-margin">关闭面板</button>
      <span onclick="deleteLabel()" style="cursor:pointer;float: right;line-height: 32px;margin-right: 15px;">删除文本</span>
    </div>
  </form>
</div>
</body>

</html>
