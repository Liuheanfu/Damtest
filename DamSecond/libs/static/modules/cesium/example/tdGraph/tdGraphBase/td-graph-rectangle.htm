<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta charset='utf-8'/>
  <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no'/>
  <title>矩形</title>
  <!--引入第三方的jquery脚本库-->
  <script src="http://localhost:8080/static/libs/cdn/cesium/Cesium.js"></script>
  <!--cesium样式-->
  <link rel="stylesheet" href="http://localhost:8080/static/libs/cdn/cesium/Widgets/widgets.css"/>
  <link rel="stylesheet" href="http://localhost:8080/static/libs/cdn/cesium/MapGIS/css/mapgis.css"/>
  <!--示例中面板、按钮等，第三方layui的js库与css样式-->
  <script src="http://localhost:8080/static/libs/cdn/layui/layui.js"></script>
  <link rel="stylesheet" href="http://localhost:8080/static/libs/cdn/layui/css/layui.css"/>
  <!--示例公共样式-->
  <link rel="stylesheet" href="http://localhost:8080/static/libs/css/style.css"/>
  <link rel="stylesheet" href="http://localhost:8080/static/libs/css/graphic.css"/>
  <script>
      'use strict';
      //取得jquery对象
      let $ = layui.$;
      //颜色管理器对象
      let colorpicker = layui.colorpicker;
      //定义三维视图的主要类
      let viewer, options, graphicsLayer, rectangle;

      //地图初始化函数
      function init() {
          //初始化球体
          initViewer();
          //初始化标绘图层
          addGraphicLayer();
          //图片矩形
          addImageRectangle();
          //图片旋转矩形
          addImageRotateRectangle();
          //纯色矩形
          addColorRectangle();
          //长方体
          addRectangleVolume();
          //矩形文字
          addTextRectangle();
          //背景渐变
          addFadeRectangle();
          //闪烁文字
          addFlashRectangle();
          //移动纯色矩形
          addColorRectangleMove();
          //加载天地图底图
          addTDT();
          //视点跳转
          flyTo();
          //初始化示例UI
          initUI();
      }

      //初始化球体
      function initViewer() {
          //构造三维视图类（视图容器div的id，三维视图设置参数）
          viewer = new Cesium.Viewer('mapgis-3d-viewer', {});
          //显示鼠标位置
          viewer.showPosition();
      }

      //初始化标绘图层
      function addGraphicLayer() {
          graphicsLayer = new Cesium.GraphicsLayer(viewer, {
              clickGraphic: function (graphic) {
                  rectangle = graphic;
                  //更新样式面板
                  $('#rectangle-offsetHeight').val(rectangle.style.offsetHeight);
                  colorpicker.render({
                      elem: '#rectangle-color',
                      color: rectangle.style.color.toCssHexString(),
                      done: function (color) {
                          $('#rectangle-color-input').val(color);
                          rectangle.style.color = Cesium.Color.fromCssColorString(color);
                      }
                  });
                  //这个时候展开编辑面板
                  $('#editPanel').show();
              }
          });
      }

      //图片矩形
      function addImageRectangle() {
          let rectangleGraphic1 = new Cesium.Graphic({
              //类型
              type: 'rectangle',
              //几何数组
              positions: [new Cesium.Cartesian3(-2244972.019176497, 5050935.769391966, 3171903.8722328846), new Cesium.Cartesian3(-2249491.2660083706, 5049673.447161487, 3170719.6822167994)],
              //样式
              style: {
                  //图片材质
                  material: Cesium.Material.fromType(Cesium.Material.ImageType, {
                      //图片URL
                      image: 'http://192.168.82.89:8200/NoneSpatialData/image/中地数码.png',
                      //x、y轴重复次数
                      repeat: new Cesium.Cartesian2(1.0, 1.0)
                  }),
                  //离地高度
                  offsetHeight: 100
              }
          })
          //将标绘点添加入标绘图层
          graphicsLayer.addGraphic(rectangleGraphic1);
      }

      //图片旋转矩形
      function addImageRotateRectangle() {
          let rectangleGraphic2 = new Cesium.Graphic({
              //类型
              type: 'rectangle',
              //几何数组
              positions: [Cesium.Cartesian3.fromDegrees(114.0275, 30.0126, 0), Cesium.Cartesian3.fromDegrees(114.0480, 29.9926, 0)],
              //样式
              style: {
                  //图片材质
                  material: Cesium.Material.fromType(Cesium.Material.ImageType, {
                      //图片URL
                      image: 'http://192.168.82.89:8200/NoneSpatialData/image/earth.jpg',
                      //x、y轴重复次数
                      repeat: new Cesium.Cartesian2(1.0, 1.0)
                  }),
                  //离地高度
                  offsetHeight: 100,
                  //顺时针旋转角度
                  stRotation: 0
              }
          })
          //将标绘点添加入标绘图层
          graphicsLayer.addGraphic(rectangleGraphic2);
          //使用定时器达到旋转圆的效果
          let rectangleGraphic2Interval = setInterval(function () {
              rectangleGraphic2.style.stRotation += Cesium.Math.toRadians(1);
          }, 30);
      }

      //纯色矩形
      function addColorRectangle() {
          let rectangleGraphic3 = new Cesium.Graphic({
              //类型
              type: 'rectangle',
              //几何点坐标
              positions: [new Cesium.Cartesian3(-2245321.034546689, 5051780.365828584, 3170322.015045328), new Cesium.Cartesian3(-2247768.11108596, 5051496.081576666, 3169049.26223311)],
              //样式
              style: {
                  //颜色
                  color: Cesium.Color.AQUA.withAlpha(0.4),
                  //离地高度
                  offsetHeight: 100
              }
          })
          //将标绘点添加入标绘图层
          graphicsLayer.addGraphic(rectangleGraphic3);
      }

      //长方体
      function addRectangleVolume() {
          let rectangleGraphic4 = new Cesium.Graphic({
              //类型
              type: 'rectangle',
              //几何点数组
              positions: [new Cesium.Cartesian3(-2247982.3897535317, 5050612.25834287, 3170297.358293347), new Cesium.Cartesian3(-2250579.7817292, 5050256.866779926, 3169028.966805721)],
              //样式
              style: {
                  //颜色
                  color: Cesium.Color.BLUEVIOLET,
                  //离地高度
                  offsetHeight: 100,
                  //拉伸高度
                  extrudedHeight: 300
              }
          })
          //将标绘点添加入标绘图层
          graphicsLayer.addGraphic(rectangleGraphic4)
      }

      //矩形文字
      function addTextRectangle() {
          let rectangleGraphic5 = new Cesium.Graphic({
              //类型
              type: 'rectangle',
              //几何点坐标
              positions: [new Cesium.Cartesian3(-2245729.3998504058, 5052721.252657707, 3168544.812328121), new Cesium.Cartesian3(-2248163.099449581, 5052358.358832135, 3167405.1689521675)],

              //样式
              style: {
                  //颜色
                  color: Cesium.Color.BLUEVIOLET,
                  //离地高度
                  offsetHeight: 100,
                  //材质类型
                  materialType: 'text',
                  //贴地文字材质
                  material: {
                      //文字
                      text: '贴地文字',
                      //文字颜色
                      fillColor: Cesium.Color.DEEPPINK,
                      //背景颜色
                      backgroundColor: Cesium.Color.WHITE.withAlpha(0),
                      //字体
                      font: 'bolder 80px MicroSoft YaHei'
                  }
              }
          })
          //将标绘点添加入标绘图层
          graphicsLayer.addGraphic(rectangleGraphic5);
      }

      //背景渐变
      function addFadeRectangle() {
          let rectangleGraphic6 = new Cesium.Graphic({
              //类型
              type: 'rectangle',
              //几何点数组
              positions: [new Cesium.Cartesian3(-2248443.283817915, 5051549.387726512, 3168489.0613495167), new Cesium.Cartesian3(-2251034.1704045474, 5051136.110796538, 3167316.002964331)],
              //样式
              style: {
                  //离地高度
                  offsetHeight: 100,
                  //材质类型
                  materialType: 'text',
                  //材质
                  material: {
                      //文字
                      text: '背景渐变',
                      //文字颜色
                      fillColor: Cesium.Color.ROYALBLUE,
                      //背景颜色
                      backgroundColor: Cesium.Color.SEASHELL,
                      //文字颜色
                      font: 'bolder 80px MicroSoft YaHei',
                      //启用背景渐变
                      isGradient: true
                  }
              }
          })
          //将标绘点添加入标绘图层
          graphicsLayer.addGraphic(rectangleGraphic6);
      }

      //闪烁矩形文字
      function addFlashRectangle() {
          let rectangleGraphic7 = new Cesium.Graphic({
              //类型
              type: 'rectangle',
              //几何点数组
              positions: [Cesium.Cartesian3.fromDegrees(114.0239, 29.9800, 0), Cesium.Cartesian3.fromDegrees(114.0585, 29.9680, 0)],
              //样式
              style: {
                  //矩形颜色
                  color: Cesium.Color.BLUEVIOLET,
                  //离地高度
                  offsetHeight: 100,
                  //材质类型
                  materialType: 'text',
                  //贴地文字材质
                  material: {
                      //文字
                      text: '闪烁文字',
                      //文字颜色
                      fillColor: Cesium.Color.DEEPPINK,
                      //背景颜色
                      backgroundColor: Cesium.Color.LIGHTSEAGREEN,
                      //字体
                      font: 'bolder 80px MicroSoft YaHei',
                      //启用闪烁
                      breathingLight: true,
                      //闪烁间隔
                      duration: 1000
                  }
              }
          })
          //将标绘添加入标绘图层
          graphicsLayer.addGraphic(rectangleGraphic7);
      }

      //移动纯色矩形
      function addColorRectangleMove() {
          let positions = [113.9641, 29.9630, 0, 113.9841, 29.9430, 0];
          let rectangleGraphic8 = new Cesium.Graphic({
              //类型
              type: 'rectangle',
              //几何点坐标
              positions: [Cesium.Cartesian3.fromDegrees(positions[0], positions[1], positions[2]), Cesium.Cartesian3.fromDegrees(positions[3], positions[4], positions[5])],
              //样式
              style: {
                  //颜色
                  color: Cesium.Color.AQUA.withAlpha(0.4),
                  //离地高度
                  offsetHeight: 100
              }
          })
          //将标绘点添加入标绘图层
          graphicsLayer.addGraphic(rectangleGraphic8);
          let positionIndex = 0;
          //定时器改变坐标
          let rectangleGraphic8Interval = setInterval(() => {
              // 构建移动坐标
              positionIndex++;
              let positionXL = Number(positions[0] + positionIndex * 0.0001);
              let positionYL = Number(positions[1] + positionIndex * 0.000005);
              let positionXR = Number(positions[3] + positionIndex * 0.0001);
              let positionYR = Number(positions[4] + positionIndex * 0.000005);
              let positionNow = [Cesium.Cartesian3.fromDegrees(positionXL, positionYL, positions[2]), Cesium.Cartesian3.fromDegrees(positionXR, positionYR, positions[5])];
              rectangleGraphic8.positions = positionNow;
              graphicsLayer.addGraphic(rectangleGraphic8);
          }, 50);
      }

      //加载天地图
      function addTDT() {
               let options = {
              //天地图URL，开发token （请到天地图官网申请自己的开发token，自带token仅做功能验证随时可能失效）
              url: "http://t0.tianditu.gov.cn/vec_w/wmts?tk=9c157e9585486c02edf817d2ecbc7752",
              //图层名称，vec：矢量底图、img：卫星影像底图、cva: 矢量注记图层（中文）、eva: 矢量注记图层（英文）、cia: 注记图层（中文）、eia: 注记图层（英文）、ter: 地形晕渲底图、cta: 注记（中文）、ibo: 全球国界
              layer: "vec",
              //瓦片样式
              style: "default",
              //比例尺
              tileMatrixSetID: "w",
              //请求格式
              format: "tiles"
          }
          viewer.imageryLayers.addImageryProvider(new Cesium.WebMapTileServiceImageryProvider(options));
      }

      //视点跳转
      function flyTo() {
          viewer.camera.flyTo({
              destination: Cesium.Cartesian3.fromDegrees(114, 29.83, 13000),
              duration: 2,
              orientation: {
                  heading: Cesium.Math.toRadians(0),
                  pitch: Cesium.Math.toRadians(-40.0),
                  roll: 0.0
              }
          });
      }

      //初始化UI
      function initUI() {
          layui.use('colorpicker', function () {
              //离地高度
              $("#rectangle-offsetHeight").bind("input propertychange", function () {
                  rectangle.style.offsetHeight = Number($('#rectangle-offsetHeight').val());
              })

              //填充颜色
              colorpicker.render({
                  elem: '#rectangle-color',
                  color: '#9dfafe',
                  done: function (color) {
                      $('#rectangle-color-input').val(color);
                      rectangle.style.color = Cesium.Color.fromCssColorString(color);
                  }
              });
          });
      }

      function startDrawing() {
          graphicsLayer.startDrawing({
              type: 'rectangle',
              style: {
                  color: Cesium.Color.fromCssColorString($('#rectangle-color-input').val()),
                  offsetHeight: Number($('#rectangle-offsetHeight').val())
              }
          });
      }

      function stopDrawing() {
          graphicsLayer.stopDrawing();
      }

      //删除标绘
      function deleteLabel() {
          rectangle.remove();
          $('#editPanel').hide();
      }
  </script>
</head>

<body onload="init()">
<div id="mapgis-3d-viewer"></div>
<div class="layui-panel layui-panel-right" style="text-align: center;width: 140px;padding: 10px;">
  <button onclick="startDrawing()" style="margin:0 auto !important;" type="button" class="layui-btn layui-btn-normal graphic-button-margin">添加矩形</button>
</div>
<div class="layui-panel layui-panel-right" id="editPanel" style="display: none;top: 70px;">
  <form class="layui-form" action="" lay-filter="example">
    <div class="sample-main-panel">
      <div class="layui-form-item">
        <label class="layui-form-label">填充颜色</label>
        <div class="layui-input-inline" style="width: 145px;margin-left:10px;">
          <input disabled type="text" value="#00ffff" placeholder="填充颜色" class="layui-input" id="rectangle-color-input">
        </div>
        <div class="layui-inline">
          <div id="rectangle-color"></div>
        </div>
      </div>
      <div class="layui-form-item">
        <label class="layui-form-label">离地高度</label>
        <div class="layui-input-block" style="width: 183px;">
          <input id="rectangle-offsetHeight" value="40" type="text" name="title" lay-verify="title" autocomplete="off" placeholder="40" class="layui-input">
        </div>
      </div>
    </div>
    <div class="sample-button-panel">
      <button onclick="$('#editPanel').hide()" style="float: right;width:auto;margin-right: 0 !important;" type="button" class="layui-btn layui-btn-normal graphic-button-margin">关闭面板</button>
      <span onclick="deleteLabel()" style="cursor:pointer;float: right;line-height: 32px;margin-right: 15px;">删除标绘</span>
    </div>
  </form>
</div>
</body>

</html>
