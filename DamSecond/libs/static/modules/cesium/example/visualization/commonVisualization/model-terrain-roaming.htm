<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta charset="utf-8"/>
  <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no"/>
  <title>贴地表漫游工具</title>
  <!--引入Cesium.js库-->
  <script src="http://localhost:8080/static/libs/cdn/cesium/Cesium.js"></script>
  <!--引入Cesium.js库相关css样式-->
  <link rel="stylesheet" href="http://localhost:8080/static/libs/cdn/cesium/Widgets/widgets.css"/>
  <link rel="stylesheet" href="http://localhost:8080/static/libs/cdn/cesium/MapGIS/css/mapgis.css"/>
  <!--示例中面板、按钮等，第三方layui的js库与css样式-->
  <script src="http://localhost:8080/static/libs/cdn/layui/layui.js"></script>
  <link rel="stylesheet" href="http://localhost:8080/static/libs/cdn/layui/css/layui.css"/>
  <!--示例公共样式-->
  <link rel="stylesheet" href="http://localhost:8080/static/libs/css/style.css"/>
  <link rel="stylesheet" href="http://localhost:8080/static/libs/css/tool.css"/>
  <script>
      "use strict";
      //定义三维视图的主要类
      let viewer, options, animation;
      //取得jquery对象
      let $ = layui.$;

      //地图初始化函数
      function init() {
          //初始化三维球体
          initViewer();
          //添加天地图
          addTDT();
          //添加地形
          addTerrain();
          //视角跳转
          flyTo();
          //初始化漫游工具
          initAnimationTool();
          // 开启动画漫游
          animation.start();
      }

      //初始化三维球体
      function initViewer() {
          //构造三维视图类（视图容器div的id，三维视图设置参数）
          viewer = new Cesium.Viewer("mapgis-3d-viewer", {
              infoBox: false,
              selectionIndicator: false,
              shouldAnimate: true,
          });
          viewer.showPosition();
      }

      //加载天地图
      function addTDT() {
          //加载天地图
         options = {
              //天地图URL，开发token （请到天地图官网申请自己的开发token，自带token仅做功能验证随时可能失效）
              url: "http://t0.tianditu.gov.cn/vec_w/wmts?tk=9c157e9585486c02edf817d2ecbc7752",
              //图层名称，vec：矢量底图、img：卫星影像底图、cva: 矢量注记图层（中文）、eva: 矢量注记图层（英文）、cia: 注记图层（中文）、eia: 注记图层（英文）、ter: 地形晕渲底图、cta: 注记（中文）、ibo: 全球国界
              layer: "vec",
              //瓦片样式
              style: "default",
              //比例尺
              tileMatrixSetID: "w",
              //请求格式
              format: "tiles"
          }
          viewer.imageryLayers.addImageryProvider(new Cesium.WebMapTileServiceImageryProvider(options));
      }

      // 添加地形
      function addTerrain() {
          viewer.scene.layers.appendSceneLayer(
              "http://192.168.82.89:8089/igs/rest/g3d/Scene:TwTerrain",
              {
                  autoReset: false,
              }
          );
      }

      //视角跳转
      function flyTo() {
          // 定位到地形，并调整到合适的视角
          viewer.camera.flyTo({
              destination: Cesium.Cartesian3.fromDegrees(120.9855, 23.44, 5000), //跳转位置
              duration: 2,
              orientation: {
                  heading: Cesium.Math.toRadians(60), //绕垂直于地心的轴旋转 ,相当于头部左右转
                  pitch: Cesium.Math.toRadians(-15), //绕经度线旋转， 相当于头部上下
                  roll: Cesium.Math.toRadians(0), //绕纬度线旋转 ，面对的一面瞬时针转
              },
          });
      }

      //初始化漫游工具
      function initAnimationTool() {
          // 关山大道坐标数组
          let pathPositions = [
              {
                  x: -3018795.772326383,
                  y: 5018683.520590468,
                  z: 2524994.1982790157,
              },
              {
                  x: -3019230.918823317,
                  y: 5018500.871857468,
                  z: 2525578.5987556055,
              },
              {
                  x: -3019545.3745514234,
                  y: 5018349.773998488,
                  z: 2525980.584267225,
              },
              {
                  x: -3019758.61902858,
                  y: 5018238.969095038,
                  z: 2526145.0399262332,
              },
              {
                  x: -3020175.0526767108,
                  y: 5018034.635750964,
                  z: 2526045.6322008367,
              },
              {
                  x: -3020858.9367513633,
                  y: 5017655.425697145,
                  z: 2525493.4657467115,
              },
              {
                  x: -3021343.3650044478,
                  y: 5017412.029001046,
                  z: 2525155.334364014,
              },
              {
                  x: -3021673.881309145,
                  y: 5017275.332435059,
                  z: 2524989.590417667,
              },
          ];

          // 定义动画漫游对象
          animation = new Cesium.AnimationTool(viewer, {
              // 漫游的方向角
              heading: Cesium.Math.PI / 2,
              // 漫游的俯仰角
              pitch: -Cesium.Math.PI / 6,
              // 相机距离模型的距离（米）
              range: 2000,
              // 设置漫游的视角类型。0：正常，不移动相机；1：跟随；2：锁定第一视角；3：上帝视角
              animationType: 0,
              // 是否循环漫游动画
              isLoop: false,
              // 是否显示漫游路径
              showPath: true,
              // 漫游路径(世界坐标点数组)
              positions: pathPositions,
              // 漫游速度(m/s)
              speed: 50,
              // 倍速
              speedupFactor: 1,
              // 附加高程
              exHeight: 0,
              // 是否显示用时和距离提示信息
              showInfo: true,
              // 漫游的模型对象的url，为空表示不显示
              modelUrl:
                  "http://192.168.82.89:8200/3DData/Model/glb/CesiumMilkTruck.glb",
              //模型对象参数，详见ModelGraphics对象的文档
              model: {
                  //放大比例
                  scale: 20,
                  //固定大小设为0
                  minimumPixelSize: 0,
                  // 模型贴地显示
                  heightReference: Cesium.HeightReference.CLAMP_TO_GROUND,
              },
              // 完成漫游后的回调函数
              complete: function () {
                  viewer.entities.remove(info);
              },
              // 路径插值算法。可选：拉格朗日算法Cesium.LagrangePolynomialApproximation、线性插值 Cesium.LinearApproximation、埃尔米特插值插值Cesium.HermitePolynomialApproximation
              interpolationAlgorithm: Cesium.LagrangePolynomialApproximation,
              //是否获取当前点坐标，为true时，需配合返回当前点坐标的回调函数callBack一起使用
              isGetPositionNow: true,
              //回调函数，返回当前所在点坐标
              callBack: function (positionNow) {
                  // console.log(positionNow);
              },
              //是否设置模型运动姿态，保持朝向与运动方向一致
              isSetModelPosture: true,
              //是否需要将较大转弯点处理为圆弧
              isProcessCorner: false,
              //设置判断为转弯点的角度的最大值，不超过150的转角会被执行插值，处理为圆弧
              maxAngle: 150.0,
              //转弯处往圆弧曲线上插值点的步长，点个数=1/curveStep
              curveStep: 0.01,
              // 是否挂载动态扫描特效
              isAddScanEffect: false,
              // 是否获取路径点的真实高程
              isGetRealHeight: true,
              //是否执行onPositionCallback回调函数，返回路径点坐标和index索引号
              onPositionTag: true,
              // 当点经过设置的路径点时，返回路径点坐标和index索引号
              onPositionCallback: function (result) {
                  console.log(
                      "到达站点" + result.index + "，站点坐标：" + result.position
                  );
              },
              // 用于判断当前点是否在路径点所在位置附近的精度
              disFactor: 5,
          });
      }

      function pause() {
          // 切换动画漫游的暂停状态
          animation.pause = !animation.pause;
          if ($('#pause').html() === '暂停') {
              $('#pause').html('继续');
          } else {
              $('#pause').html('暂停');
          }
      }
  </script>
</head>

<body onload="init()">
<div id="mapgis-3d-viewer"></div>
<div class="layui-panel layui-panel-right" style="width: 103px">
  <div class="sample-button-panel">
    <button id="pause" type="button" class="layui-btn" onclick="pause()">暂停</button>
  </div>
</div>
</body>
</html>
