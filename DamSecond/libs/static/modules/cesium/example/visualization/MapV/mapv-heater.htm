<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
  <title>热力图</title>
  <!--引入Cesium.js库-->
  <script src="http://localhost:8080/static/libs/cdn/cesium/Cesium.js"></script>
  <!--引入Cesium.js库相关css样式-->
  <link rel="stylesheet" href="http://localhost:8080/static/libs/cdn/cesium/Widgets/widgets.css"/>
  <link rel="stylesheet" href="http://localhost:8080/static/libs/cdn/cesium/MapGIS/css/mapgis.css"/>
  <!--引入mapv-->
  <script type="text/javascript" src="http://localhost:8080/static/libs/cdn/overlay/mapv/mapv.min.js"></script>
  <!--配合echarts引入文件-->
  <script src="http://localhost:8080/static/libs/cdn/overlay/MapvLayer.js" type="module"></script>
  <!--示例中面板、按钮等，第三方layui的js库与css样式-->
  <script src="http://localhost:8080/static/libs/cdn/layui/layui.js"></script>
  <link rel="stylesheet" href="http://localhost:8080/static/libs/cdn/layui/css/layui.css"/>
  <!--示例公共样式-->
  <link rel="stylesheet" href="http://localhost:8080/static/libs/css/style.css"/>
  <script>
      'use strict';
      // 定义三维视图的主要类
      let viewer = null;

      function initMapVData(){
          let randomCount = 1000;
          let data = [];
          let citys = ["北京", "天津", "上海", "重庆", "石家庄", "太原", "呼和浩特", "哈尔滨", "长春", "沈阳", "济南",
              "南京", "合肥", "杭州", "南昌", "福州", "郑州", "武汉", "长沙", "广州", "南宁", "西安", "银川", "兰州", "西宁",
              "乌鲁木齐", "成都", "贵阳", "昆明", "拉萨", "海口"];
          // 构造数据 将数据处理成对应的geojson格式
          while (randomCount--) {
              let cityCenter = mapv.utilCityCenter.getCenterByCityName(
                  citys[parseInt(Math.random() * citys.length)]
              );
              data.push({
                  geometry: {
                      type: "Point",
                      coordinates: [
                          cityCenter.lng - 2 + Math.random() * 4,
                          cityCenter.lat - 2 + Math.random() * 4,
                      ],
                  },
                  count: 30 * Math.random(),
                  time: 100 * Math.random(),
              });
          }

          // 构建对应的dataset
          let dataSet = new mapv.DataSet(data);

          // 设置对应的参数
          // https://github.com/huiyan-fe/mapv/blob/master/API.md
          let options = {
              context: "2d", //cesium必须设置画布为2d
              cesium: {
                  postRender: true,
                  postRenderFrame: 10,
              },
              size: 13,
              gradient: {
                  0.25: "rgb(0,0,255)",
                  0.55: "rgb(0,255,0)",
                  0.85: "yellow",
                  1.0: "rgb(255,0,0)",
              },
              max: 60,
              animation: {
                  type: "time",
                  stepsRange: {
                      start: 0,
                      end: 100,
                  },
                  trails: 10,
                  duration: 4,
              },
              draw: "heatmap", // 绘制热力图
          };
          // 声明cesium的mapv图层并将其显示到三维球上
          let mapvLayer = new window.MapvLayer(
              viewer,
              dataSet,
              options
          );
      }

      function init(){
          //构造三维视图类（视图容器div的id，三维视图设置参数）
          viewer = new Cesium.Viewer('mapgis-3d-viewer', {});
          // 蓝色背景
          let blueImage = new Cesium.UrlTemplateImageryProvider({
              url:
                  "https://map.geoq.cn/arcgis/rest/services/ChinaOnlineStreetPurplishBlue/MapServer/tile/{z}/{y}/{x}",
              tilingScheme: new Cesium.WebMercatorTilingScheme(),
              maximumLevel: 18,
          });
          viewer.imageryLayers.addImageryProvider(blueImage);
          initMapVData();
      }
  
  </script>
</head>
<body onload="init()">
<div id="mapgis-3d-viewer"></div>
</body>
</html>
