<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no'/>
  <title>自定义-网格专题</title>
  <!--引入Cesium.js库-->
  <script src="http://localhost:8080/static/libs/cdn/cesium/Cesium.js"></script>
  <!--引入Cesium.js库相关css样式-->
  <link rel="stylesheet" href="http://localhost:8080/static/libs/cdn/cesium/Widgets/widgets.css"/>
  <link rel="stylesheet" href="http://localhost:8080/static/libs/cdn/cesium/MapGIS/css/mapgis.css"/>
  <!--引入echarts-->
  <script type="text/javascript" src="http://localhost:8080/static/libs/cdn/overlay/echarts/echarts.min.js"></script>
  <!--配合echarts引入文件-->
  <script src="http://localhost:8080/static/libs/cdn/overlay/EchartsLayer.js" type="module"></script>
  <!--示例中面板、按钮等，第三方layui的js库与css样式-->
  <script src="http://localhost:8080/static/libs/cdn/layui/layui.js"></script>
  <link rel="stylesheet" href="http://localhost:8080/static/libs/cdn/layui/css/layui.css"/>
  <!--示例公共样式-->
  <link rel="stylesheet" href="http://localhost:8080/static/libs/css/style.css"/>
  <script>
      'use strict';
      // 定义三维视图的主要类
      let viewer = null;
      let COLORS = [
          "#070093",
          "#1c3fbf",
          "#1482e5",
          "#70b4eb",
          "#b4e0f3",
          "#ffffff",
      ];
      let lngExtent = [39.5, 40.6];
      let latExtent = [115.9, 116.8];
      let cellCount = [50, 50];
      let cellSizeCoord = [
          (lngExtent[1] - lngExtent[0]) / cellCount[0],
          (latExtent[1] - latExtent[0]) / cellCount[1],
      ];
      let gapSize = 0;
      // echarts实例
      let layer = null;

      //初始化
      function init() {
          //地图初始化
          initMap();
          //echarts
          initEcharts();
      }

      //地图初始化
      function initMap() {
          //构造三维视图类（视图容器div的id，三维视图设置参数）
          viewer = new Cesium.Viewer('mapgis-3d-viewer', {});
          // 蓝色背景
          let blueImage = new Cesium.UrlTemplateImageryProvider({
              url:
                  "https://map.geoq.cn/arcgis/rest/services/ChinaOnlineStreetPurplishBlue/MapServer/tile/{z}/{y}/{x}",
              tilingScheme: new Cesium.WebMercatorTilingScheme(),
              maximumLevel: 8,
          });
          viewer.imageryLayers.addImageryProvider(blueImage);
          // 相机位置
          let center = Cesium.Cartesian3.fromDegrees(116.4, 40, 200000.0);
          viewer.scene.camera.setView({
              destination: center,
          });
      }

      /**
       * 根据数据的属性参数针对不同的属性附不同的值
       **/
      function renderItemFunc(params, api) {
          let lngIndex = api.value(0);
          let latIndex = api.value(1);
          let pointLeftTop = getCoord(params, api, lngIndex, latIndex);
          let pointRightBottom = getCoord(
              params,
              api,
              lngIndex + 1,
              latIndex + 1
          );

          return {
              type: "rect",
              shape: {
                  x: pointLeftTop[0],
                  y: pointLeftTop[1],
                  width: pointRightBottom[0] - pointLeftTop[0],
                  height: pointRightBottom[1] - pointLeftTop[1],
              },
              style: api.style({
                  stroke: "rgba(0,0,0,0.1)",
              }),
              styleEmphasis: api.styleEmphasis(),
          };
      }

      /**
       * 获取数据的坐标位置
       **/
      function getCoord(params, api, lngIndex, latIndex) {
          let coords = params.context.coords || (params.context.coords = []);
          let key = lngIndex + "-" + latIndex;
          // bmap returns point in integer, which makes cell width unstable.
          // So we have to use right bottom point.
          return (
              coords[key] ||
              (coords[key] = api.coord([
                  +(latExtent[0] + lngIndex * cellSizeCoord[0]).toFixed(6),
                  +(lngExtent[0] + latIndex * cellSizeCoord[1]).toFixed(6),
              ]))
          );
      }

      //echarts
      function initEcharts() {
          // options参数请参考百度echarts-options
          // https://echarts.apache.org/zh/option.html#title
          httpGetPromise('http://192.168.82.89:8200/Vector/json/grid/gridData.json').then(gridData => {
              let option = {
                  tooltip: {},
                  visualMap: {
                      type: "piecewise",
                      inverse: true,
                      top: 10,
                      right: 10,
                      pieces: [
                          {
                              value: 0,
                              color: COLORS[0],
                          },
                          {
                              value: 1,
                              color: COLORS[1],
                          },
                          {
                              value: 2,
                              color: COLORS[2],
                          },
                          {
                              value: 3,
                              color: COLORS[3],
                          },
                          {
                              value: 4,
                              color: COLORS[4],
                          },
                          {
                              value: 5,
                              color: COLORS[5],
                          },
                      ],
                      borderColor: "#ccc",
                      borderWidth: 1,
                      backgroundColor: "#eee",
                      dimension: 2,
                      inRange: {
                          color: COLORS,
                          opacity: 0.8,
                      },
                  },
                  cesium: {
                      roam: true,
                  },
                  animation: false,
                  postRender: true,
                  geo: {
                      geoIndex: 0,
                  },
                  series: [
                      {
                          type: "custom",
                          coordinateSystem: "cesium", // 设置cesium坐标系
                          data: gridData,
                          renderItem: renderItemFunc,
                          animation: false,
                          itemStyle: {
                              emphasis: {
                                  color: "yellow",
                              },
                          },
                          encode: {
                              tooltip: 2,
                          },
                      },
                  ],
              };
              // 声明cesium的echarts图层并将其显示到三维球上
              layer = new window.EchartsLayer(viewer, option).addTo(viewer);
          })
      }

      // 发送请求获取数据
      function httpGetPromise(url){
          return new Promise(function (resolve, reject) {
              const handler = function () {
                  if (this.readyState !== 4) {
                      return;
                  }
                  if (this.status === 200) {
                      resolve(this.response);
                  } else {
                      reject(new Error(this.statusText));
                  }
              };
              const client = new XMLHttpRequest();
              client.open('GET', url);
              client.onreadystatechange = handler;
              client.responseType = 'json';
              client.setRequestHeader('Accept', 'application/json');
              client.send();
          });
      }

  </script>
</head>
<body onload="init()">
<div id="mapgis-3d-viewer"></div>
</body>
</html>
