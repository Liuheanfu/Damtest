<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta charset="utf-8"/>
  <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no"/>
  <title>相机</title>
  <!--引入第三方的jquery脚本库-->
  <script src="http://localhost:8080/static/libs/cdn/cesium/Cesium.js"></script>
  <!--cesium样式-->
  <link rel="stylesheet" href="http://localhost:8080/static/libs/cdn/cesium/Widgets/widgets.css"/>
  <link rel="stylesheet" href="http://localhost:8080/static/libs/cdn/cesium/MapGIS/css/mapgis.css"/>
  <!--示例中面板、按钮等，第三方layui的js库与css样式-->
  <script src="http://localhost:8080/static/libs/cdn/layui/layui.js"></script>
  <link rel="stylesheet" href="http://localhost:8080/static/libs/cdn/layui/css/layui.css"/>
  <!--示例公共样式-->
  <link rel="stylesheet" href="http://localhost:8080/static/libs/css/style.css"/>
  <script>
      "use strict";
      //定义三维视图的主要类
      let viewer;

      //地图初始化函数
      function init() {
          //初始化球体
          initViewer();
          //定位至默认位置
          flyHome();
          //加载天地图
          addTDT();
          //初始化示例UI操作
          initUI();
      }

      //初始化球体
      function initViewer() {
          //构造三维视图类（视图容器div的id，三维视图设置参数）
          viewer = new Cesium.Viewer("mapgis-3d-viewer", {});
      }

      //加载天地图
      function addTDT() {
          let options = {
              //天地图URL，开发token （请到天地图官网申请自己的开发token，自带token仅做功能验证随时可能失效）
              url: "http://t0.tianditu.gov.cn/vec_w/wmts?tk=9c157e9585486c02edf817d2ecbc7752",
              //图层名称，vec：矢量底图、img：卫星影像底图、cva: 矢量注记图层（中文）、eva: 矢量注记图层（英文）、cia: 注记图层（中文）、eia: 注记图层（英文）、ter: 地形晕渲底图、cta: 注记（中文）、ibo: 全球国界
              layer: "vec",
              //瓦片样式
              style: "default",
              //比例尺
              tileMatrixSetID: "w",
              //请求格式
              format: "tiles"
          }
          viewer.imageryLayers.addImageryProvider(new Cesium.WebMapTileServiceImageryProvider(options));
          options.url = "http://t0.tianditu.gov.cn/cva_w/wmts?tk=9c157e9585486c02edf817d2ecbc7752";
          options.layer = 'cva';
          viewer.imageryLayers.addImageryProvider(new Cesium.WebMapTileServiceImageryProvider(options));
      }

      // 初始化示例UI操作
      function initUI() {
          layui.use(function () {
              var form = layui.form;
              //监听选择框
              form.on("select(mode)", function (data) {
                  //切换相机选项
                  switch (data.value) {
                      case '0':
                          // 定位至默认位置
                          flyHome();
                          break;
                      case "1":
                          // 飞行至某一点
                          flyToPoints();
                          break;
                      case "2":
                          // 飞行至某区域
                          flyToArea();
                          break;
                      case "3":
                          // 设置相机点
                          setViewPoints();
                          break;
                      case "4":
                          // 设置相机区域
                          setViewArea();
                          break;
                      case "5":
                          // 连续飞行多个点
                          flyPath(0);
                          break;
                      case "6":
                          // 获取当前视角信息
                          getViewInfo();
                          break;
                      default:
                          flyHome();
                          break;
                  }
              });
          });
      }

      // 定位至默认位置
      function flyHome() {
          viewer.camera.flyHome(1.0);
      }

      // 飞行至某一点
      function flyToPoints() {
          viewer.camera.flyTo({
              destination: Cesium.Cartesian3.fromDegrees(114.35231209, 30.53542614, 5000.0), // 摄像机在WGS84坐标中的最终位置
              orientation: {
                  heading: Cesium.Math.toRadians(0.0), // 方向角
                  pitch: Cesium.Math.toRadians(-90.0), // 俯仰角
                  roll: Cesium.Math.toRadians(0.0) // 翻滚角
              }
          });
      }

      // 飞行至某区域
      function flyToArea() {
          viewer.camera.flyTo({
              destination: Cesium.Rectangle.fromDegrees(113.683333, 29.966667, 115.083333, 31.366667)
          });
      }

      // 设置相机点，没有飞行过程，是立即生效
      function setViewPoints() {
          // 先取消飞行
          cancelFlight();
          viewer.camera.setView({
              destination: Cesium.Cartesian3.fromDegrees(114.40782845, 30.51011682, 5000.0), // 摄像机在WGS84坐标中的最终位置
              orientation: {
                  heading: Cesium.Math.toRadians(0.0), // 方向角
                  pitch: Cesium.Math.toRadians(-90.0), // 俯仰角
                  roll: Cesium.Math.toRadians(0.0) // 翻滚角
              }
          });
      }

      // 设置相机区域，没有飞行过程，是立即生效
      function setViewArea() {
          // 先取消飞行
          cancelFlight();
          viewer.camera.setView({
              destination: Cesium.Rectangle.fromDegrees(120.86667, 30.66667, 122.2, 31.883333)
          });
      }

      // 连续飞行多个点
      let path = [
          [116.5153, 29.9889, 4000],
          [120.7996, 23.1996, 10000],
          [114.301, 30.507, 10000000],
          [-111.7600, 37.3090, 1000000],
          [125.368, 43.862, 2000],
          [125.368, 43.862, 10000000]
      ];
      let orientation = [-90, -90, -90, -90, -90, -90];

      function flyPath(index) {
          if (index > path.length) return;
          viewer.camera.flyTo({
              destination: Cesium.Cartesian3.fromDegrees(
                  path[index][0],
                  path[index][1],
                  path[index][2]
              ),
              orientation: {
                  pitch: Cesium.Math.toRadians(orientation[index])
              },
              duration: 5,
              // 完成飞行后的回调函数，连续飞行的关键函数
              complete: () => {
                  index++;
                  if (index < path.length) {
                      flyPath(index);
                  }
              },
          });
      }

      // 获取当前视角信息
      function getViewInfo() {
          // 取消飞行定位
          cancelFlight();
          let longitude = Cesium.Math.toDegrees(viewer.camera.positionCartographic.longitude); // 经度
          let latitude = Cesium.Math.toDegrees(viewer.camera.positionCartographic.latitude); // 纬度
          let height = viewer.camera.positionCartographic.height; // 高度
          let heading = Cesium.Math.toDegrees(viewer.camera.heading); // 方向角
          let pitch = Cesium.Math.toDegrees(viewer.camera.pitch); // 俯仰角

          // 弹框展示信息
          layer.open({
              type: 1,
              skin: 'layui-layer-view-info',
              title: false,
              shadeClose: true,
              content: `
              <div>lat：${longitude}</div>
              <div>lng：${latitude}</div>
              <div>alt：${height}</div>
              <div>heading：${heading}</div>
              <div>pitch：${pitch}</div>
             `,
          });
      }

      // 取消飞行定位
      function cancelFlight() {
          viewer.camera.cancelFlight();
      }

  </script>
</head>

<body onload="init()">
<div id="mapgis-3d-viewer"></div>
<div class="layui-panel layui-panel-right">
  <form class="layui-form" action="">
    <div class="layui-form-item">
      <label class="layui-form-label">相机选项</label>
      <div class="layui-input-block" style="width: 180px">
        <select name="mode" lay-verify="required" lay-filter="mode">
          <option value="0" selected>定位至默认视角</option>
          <option value="1">飞行至某一点</option>
          <option value="2">飞行至某区域</option>
          <option value="3">设置相机点</option>
          <option value="4">设置相机区域</option>
          <option value="5">按序飞行多个位置</option>
          <option value="6">获取当前视角信息</option>
        </select>
      </div>
    </div>
  </form>
</div>
<style>
  .layui-layer-hui .layui-layer-content {
    text-align: left;
  }

  .layui-layer-view-info {
    background: rgba(0, 0, 0, 0.7);
    color: #fff;
    padding: 16px;
    font-size: 15px;
  }
</style>
</body>
</html>
