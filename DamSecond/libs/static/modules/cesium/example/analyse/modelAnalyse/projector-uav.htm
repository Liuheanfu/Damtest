<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta charset="utf-8"/>
  <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no"/>
  <title>无人机视频投放工具</title>
  <!--引入第三方的jquery脚本库-->
  <script src="http://localhost:8080/static/libs/cdn/cesium/Cesium.js"></script>
  <!--cesium样式-->
  <link rel="stylesheet" href="http://localhost:8080/static/libs/cdn/cesium/Widgets/widgets.css"/>
  <link rel="stylesheet" href="http://localhost:8080/static/libs/cdn/cesium/MapGIS/css/mapgis.css"/>
  <!--示例中面板、按钮等，第三方layui的js库与css样式-->
  <script src="http://localhost:8080/static/libs/cdn/layui/layui.js"></script>
  <link rel="stylesheet" href="http://localhost:8080/static/libs/cdn/layui/css/layui.css"/>
  <!--示例公共样式-->
  <link rel="stylesheet" href="http://localhost:8080/static/libs/css/style.css"/>
  <link rel="stylesheet" href="http://localhost:8080/static/libs/css/tool.css"/>
  <script>
      "use strict";
      //定义三维视图的主要类
      let viewer, options, graphicsLayer, squareGraphic;
      let positionIndex;
      let interval = null; // 定时器
      //初始位置
      let positions = [114.4020, 30.4666, 0, 114.4037, 30.4678, 0];

      //地图初始化函数
      function init() {
          //初始化三维球体
          initViewer();
          //加载天地图
          addTDT();
          //添加视频
          addVideo();
          //视点跳转
          flyTo();
      }

      //初始化三维球体
      function initViewer() {
          //构造三维视图类（视图容器div的id，三维视图设置参数）
          viewer = new Cesium.Viewer("mapgis-3d-viewer", {});
      }

      //加载天地图
      function addTDT() {
          let options = {
              //天地图URL，开发token （请到天地图官网申请自己的开发token，自带token仅做功能验证随时可能失效）
              url: "http://t0.tianditu.gov.cn/vec_w/wmts?tk=9c157e9585486c02edf817d2ecbc7752",
              //图层名称，vec：矢量底图、img：卫星影像底图、cva: 矢量注记图层（中文）、eva: 矢量注记图层（英文）、cia: 注记图层（中文）、eia: 注记图层（英文）、ter: 地形晕渲底图、cta: 注记（中文）、ibo: 全球国界
              layer: "vec",
              //瓦片样式
              style: "default",
              //比例尺
              tileMatrixSetID: "w",
              //请求格式
              format: "tiles"
          }
          viewer.imageryLayers.addImageryProvider(new Cesium.WebMapTileServiceImageryProvider(options));
      }

      //两组坐标转换成视频正方形坐标
      function getPosition(positions) {
          let position1 = Cesium.Cartesian3.fromDegrees(positions[0], positions[1], positions[2]);
          let position2 = Cesium.Cartesian3.fromDegrees(positions[3], positions[4], positions[5]);
          return [position1, position2];
      }

      //添加视频
      function addVideo() {
          if (squareGraphic) {
              squareGraphic.remove();
          }
          if (interval) {
              clearInterval(interval);
          }
          graphicsLayer = new Cesium.GraphicsLayer(viewer);
          let videoElement = document.getElementById('trailer');
          squareGraphic = new Cesium.Graphic({
              //类型
              type: 'square',
              //几何点坐标
              positions: getPosition(positions),
              //样式
              style: {
                  // 图片材质
                  material: Cesium.Material.fromType(Cesium.Material.ImageType, {
                      //图片url
                      image: videoElement,
                      // x、y轴重复
                      repeat: new Cesium.Cartesian2(1.0, 1.0)
                  }),
                  // 离地高度
                  height: 10
              }
          })
          //将标绘点添加入标绘图层
          graphicsLayer.addGraphic(squareGraphic);
          positionIndex = 0;
          //定时器改变坐标
          interval = setInterval(() => {
              if (positionIndex > 400) {
                  //重置
                  addVideo();
                  return false;
              }
              // 构建移动坐标
              positionIndex++;
              let positionXL = Number(positions[0] + positionIndex * 0.0000005);
              let positionYL = Number(positions[1] + positionIndex * 0.00001);
              let positionXR = Number(positions[3] + positionIndex * 0.0000005);
              let positionYR = Number(positions[4] + positionIndex * 0.00001);
              let positionNow = getPosition([positionXL, positionYL, positions[2], positionXR, positionYR, positions[5]]);
              squareGraphic.positions = positionNow;
              graphicsLayer.addGraphic(squareGraphic);
          }, 50);
      }

      //视点跳转
      function flyTo() {
          viewer.camera.flyTo({
              destination: Cesium.Cartesian3.fromDegrees(114.4025, 30.4610, 700),
              orientation: {
                  heading: Cesium.Math.toRadians(0), // 水平偏角，默认正北 0
                  pitch: Cesium.Math.toRadians(-44), // 俯视角，默认-90，垂直向下
                  roll: 0, // 旋转角
              },
          });
      }
  </script>
</head>

<body onload="init()">
<div id="mapgis-3d-viewer"></div>
<video id="trailer" style="display: none;" autoplay="" loop="" crossorigin="" controls="">
  <source src="http://192.168.82.89:8200/NoneSpatialData/video/scenePro.mp4" type="video/mp4">
</video>
</body>
</html>
