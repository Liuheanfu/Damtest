<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
  <title>洪水淹没分析</title>
  <!--引入Cesium.js库-->
  <script src="http://localhost:8080/static/libs/cdn/cesium/Cesium.js"></script>
  <!--引入Cesium.js库相关css样式-->
  <link rel="stylesheet" href="http://localhost:8080/static/libs/cdn/cesium/Widgets/widgets.css" />
  <link rel="stylesheet" href="http://localhost:8080/static/libs/cdn/cesium/MapGIS/css/mapgis.css" />
  <!--示例中面板、按钮等，第三方layui的js库与css样式-->
  <script src="http://localhost:8080/static/libs/cdn/layui/layui.js"></script>
  <link rel="stylesheet" href="http://localhost:8080/static/libs/cdn/layui/css/layui.css" />
  <!--示例公共样式-->
  <link rel="stylesheet" href="http://localhost:8080/static/libs/css/style.css" />
  <link rel="stylesheet" href="http://localhost:8080/static/libs/css/analyse.css"/>
  <script>
      'use strict';
      //定义三维视图的主要类
      let viewer = null;
      //绘制多边形的工具
      let drawElement = null;
      //天际线分析类
      let floodAnalysis = null;
      //洪水的最高淹没高度
      let maxHeight = 2800;
      //地图初始化函数
      function init() {
          //创建三维球体
          initViewer();
          //添加天地图底图
          addTdtImage();
          //添加地形数据
          addDem();
          //添加示例UI滑动条
          addSlideBar();
      }

      //创建三维球体
      function initViewer() {
          //构造三维视图类（视图容器div的id，三维视图设置参数）
          viewer = new Cesium.Viewer('mapgis-3d-viewer', {});
          //显示坐标高程显示
          viewer.showPosition();
          //打开深度检测
          viewer.scene.globe.depthTestAgainstTerrain = true;
      }

      //添加绘制工具，主要是为了方便拿到区的点集合
      function addDrawElement() {
          if (drawElement === null) {
              drawElement = new Cesium.DrawElement(viewer);
          }
          //先清除已有的分析类
          removeFloodAnalyse();
          drawElement.startDrawingPolygon({
              callback: function (result) {
                  let positions = result.positions;
                  floodAnalysis = new Cesium.FloodAnalysis(viewer, positions);
                  //设置洪水淹没区域最低开始高度
                  floodAnalysis.startHeight = 0;
                  //设置洪水淹没区域动画开始高度
                  floodAnalysis.minHeight = 20;
                  //设置洪水淹没区域最高高度
                  floodAnalysis.maxHeight = maxHeight;
                  //反射光线强度
                  floodAnalysis.specularIntensity = 1;
                  //水波高度
                  floodAnalysis.amplitude = 10;
                  //水纹速度
                  floodAnalysis.animationSpeed = 0.01;
                  //水纹频率
                  floodAnalysis.frequency = 1000;
                  //设置洪水上涨速度
                  floodAnalysis.floodSpeed = 1000;
                  floodAnalysis.floodColor = new Cesium.Color(143 / 255, 183 / 255, 143 / 255, 0.5);
                  //添加洪水淹没结果显示
                  viewer.scene.visualAnalysisManager.add(floodAnalysis);
                  //取消掉绘制
                  drawElement.stopDrawing();
              }
          });
      }

      //操作面板添加拖动条
      function addSlideBar(){
          //淹没高度
          layui.slider.render({
              elem: '#heightSlide',
              value: maxHeight,
              min: 2500,
              max: 3000,
              input: true,
              theme: 'rgba(24, 144, 255, 1)',
              change: function(value){
                  let isDown = false;
                  if(value<maxHeight){
                      isDown = true;
                  }
                  maxHeight = value;
                  changeMaxHeight(isDown);
              }
          });
      }

      //变更洪水分析的最高高度
      function changeMaxHeight(isDown){
          if(floodAnalysis){
              floodAnalysis.maxHeight = maxHeight;
              floodAnalysis.floodSpeed = 100; //动画执行的快点
              floodAnalysis.isDownFlood = isDown;
              viewer.scene.requestRender();
          }
      }

      //清除洪水淹没分析
      function removeFloodAnalyse(){
          //判断是否已有洪水淹没分析结果
          if (floodAnalysis) {
              //移除洪水淹没分析显示结果
              viewer.scene.visualAnalysisManager.remove(floodAnalysis);
              floodAnalysis = null;
          }
          if(drawElement){
              drawElement.stopDrawing();
          }
          viewer.entities.removeAll();
      }

      //添加天地图影像数据
      function addTdtImage(){
                   let options = {
              //天地图URL，开发token （请到天地图官网申请自己的开发token，自带token仅做功能验证随时可能失效）
              url: "http://t0.tianditu.gov.cn/vec_w/wmts?tk=9c157e9585486c02edf817d2ecbc7752",
              //图层名称，vec：矢量底图、img：卫星影像底图、cva: 矢量注记图层（中文）、eva: 矢量注记图层（英文）、cia: 注记图层（中文）、eia: 注记图层（英文）、ter: 地形晕渲底图、cta: 注记（中文）、ibo: 全球国界
              layer: "vec",
              //瓦片样式
              style: "default",
              //比例尺
              tileMatrixSetID: "w",
              //请求格式
              format: "tiles"
          }
          viewer.imageryLayers.addImageryProvider(new Cesium.WebMapTileServiceImageryProvider(options));
      }
      //添加DEM数据
      function addDem(){
          let url = 'http://192.168.82.89:8089/igs/rest/g3d/Scene:TwTerrain';
          viewer.scene.layers.appendSceneLayer(url, { requestVertexNormals: true, autoReset: false });
          flyToTerrain();
      }
      //定位到地形
      function flyToTerrain(){
          let destination = Cesium.Cartesian3.fromDegrees(121.0076, 23.3814, 9000.0);
          let orientation = {
              pitch: Cesium.Math.toRadians(-35.0),
          };
          viewer.camera.flyTo({
              destination: destination,
              orientation: orientation
          });
      }

  </script>
</head>
<body onload="init()">
<div id="mapgis-3d-viewer">
</div>
<div class="layui-panel layui-panel-right">
  <form class="layui-form" action="">
    <div class="sample-main-panel">
      <div class="layui-form-item">
        <label class="layui-form-label">淹没高度</label>
        <div id="heightSlide" class="demoSlider"></div>
      </div>
    </div>
    <div class="sample-button-panel">
      <button type="button" class="layui-btn layui-btn-sm layui-btn-normal" onclick="addDrawElement()">绘制淹没区</button>
      <button type="button" class="layui-btn layui-btn-sm layui-btn-danger" onclick="removeFloodAnalyse()">清除</button>
    </div>
  </form>
</div>
<style>
  .layui-slider {
    top: 16px;
    left: 74px;
    width: 122px;
  }
  .layui-slider-input {
    top: 2px;
  }
</style>
</body>
</html>
