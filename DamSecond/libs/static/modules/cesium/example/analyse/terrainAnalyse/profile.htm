<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
  <title>剖切分析</title>
  <!--引入Cesium.js库-->
  <script src="http://localhost:8080/static/libs/cdn/cesium/Cesium.js"></script>
  <!--引入Cesium.js库相关css样式-->
  <link rel="stylesheet" href="http://localhost:8080/static/libs/cdn/cesium/Widgets/widgets.css" />
  <link rel="stylesheet" href="http://localhost:8080/static/libs/cdn/cesium/MapGIS/css/mapgis.css" />
  <!--引入echarts-->
  <script src="http://localhost:8080/static/libs/cdn/echarts/echarts.min.js"></script>
  <!--示例中面板、按钮等，第三方layui的js库与css样式-->
  <script src="http://localhost:8080/static/libs/cdn/layui/layui.js"></script>
  <link rel="stylesheet" href="http://localhost:8080/static/libs/cdn/layui/css/layui.css" />
  <!--示例公共样式-->
  <link rel="stylesheet" href="http://localhost:8080/static/libs/css/style.css" />
  <link rel="stylesheet" href="http://localhost:8080/static/libs/css/analyse.css"/>
  <script>
      'use strict';
      //定义三维视图的主要类
      let viewer = null;
      //剖切分析实例
      let terrainProfile = null;
      //echart实例
      let echart = null;
      //地图初始化函数
      function init() {
          //初始化三维球体
          initViewer();
          //添加天地图底图
          addTDT();
          //添加地址体
          addDem();
      }

      //初始化三维球体
      function initViewer() {
          //构造三维视图类（视图容器div的id，三维视图设置参数）
          viewer = new Cesium.Viewer('mapgis-3d-viewer', {});
          viewer.showPosition();
          //打开深度检测
          viewer.scene.globe.depthTestAgainstTerrain = true;
      }

      //添加剖切分析
      //剖切分析有三种展现方式:
      //场景展示(一条贴合切面的线),
      //echart展示(依赖echart，出现折线图)，
      //联动展示（echart图标hover会对应在场景中联动展示）
      function addTerrainProfile(){
          //每次新使用之前移除之前的内容
          removeTerrainProfile();
          echart = echarts.init(document.getElementById('echart'));
          let option = getEChartOption();
          echart.setOption(option);
          terrainProfile = new Cesium.TerrainProfile(viewer, {
              showPolygon: true, //是否显示垂直面
              polygonColor: Cesium.Color.YELLOW.withAlpha(1), //垂直面颜色
              polygonHeight: 1000, //垂直面高度
              polyLineColor: Cesium.Color.BLUE, //联动展示时：垂直线颜色
              pointColor: Cesium.Color.YELLOW, //联动展示时：贴地点颜色
              polylineGroundColor: Cesium.Color.RED, //贴地线颜色
              samplePrecision: 2, //采集精度
              profileType: 1, //分析类型：0地形模式；1地形和模型兼容模式
              sampleLever: -1, //采样级别.0代表采最精细级别,-1代表当前视窗内的级别,1-20为自定义采样级别
              resultShowType: 2, //结果展示形式.0代表仅场景中展示结果(直接在地形上绘制结果),1表示仅echart图表中展示结果,2表示场景和图表都展示结果
              echart: echart //当resultShowType为1和2时，必须传
          });
          terrainProfile.profile(profileStartCallback,profileSuccessCallback);
      }

      //剖切分析开始的回调
      function profileStartCallback(){
      }

      //剖切分析结束的回调
      function profileSuccessCallback(){
          let echartPanel = document.getElementById("echartPanel");
          echartPanel.style.display = 'block';
      }

      //echart对应的option
      function getEChartOption(){
          return {
              tooltip: {
                  trigger: 'axis'
              },
              grid: {
                  top: '12%',
                  left: '10%',
                  right: '5%',
                  bottom: '6%',
              },
              calculable: true,
              xAxis:{
                  type: 'value',
                  max: 'dataMax',
                  scale: true,
                  axisLine: {
                      lineStyle:{
                          color: '#fff'
                      }
                  },
                  axisLabel: {
                      show:false
                  },
                  axisTick:{
                      show:false
                  }
              },
              yAxis: {
                  type: 'value',
                  scale: true,
                  axisLine: {
                      lineStyle:{
                          color: '#fff'
                      }
                  }
              },
              series: [
                  {
                      type: 'line',
                      markPoint: {
                          data: [
                              { type: 'max', name: '最高点' },
                              { type: 'min', name: '最低点' }
                          ],
                          symbolSize: 40
                      }
                  }
              ]
          };
      }

      //移除剖切分析
      function removeTerrainProfile(){
          if(terrainProfile){
              terrainProfile.destroy();
              terrainProfile = null;
          }
          if(echart){
              echart.dispose();
              echart = null;
          }
          //隐藏echart面板
          document.getElementById('echartPanel').style.display = 'none';
      }

      //添加天地图影像数据
      function addTDT(){
          let options = {
              //天地图URL，开发token （请到天地图官网申请自己的开发token，自带token仅做功能验证随时可能失效）
              url: "http://t0.tianditu.gov.cn/vec_w/wmts?tk=9c157e9585486c02edf817d2ecbc7752",
              //图层名称，vec：矢量底图、img：卫星影像底图、cva: 矢量注记图层（中文）、eva: 矢量注记图层（英文）、cia: 注记图层（中文）、eia: 注记图层（英文）、ter: 地形晕渲底图、cta: 注记（中文）、ibo: 全球国界
              layer: "vec",
              //瓦片样式
              style: "default",
              //比例尺
              tileMatrixSetID: "w",
              //请求格式
              format: "tiles"
          }
          viewer.imageryLayers.addImageryProvider(new Cesium.WebMapTileServiceImageryProvider(options));
      }
      //添加DEM数据
      function addDem(){
          let url = 'http://192.168.82.89:8089/igs/rest/g3d/Scene:TwTerrain';
          viewer.scene.layers.appendSceneLayer(url, { requestVertexNormals: true, autoReset: false });
          flyToTerrain();
      }
      //定位到地形
      function flyToTerrain(){
          let destination = Cesium.Cartesian3.fromDegrees(121.0076, 23.3814, 9000.0);
          let orientation = {
              pitch: Cesium.Math.toRadians(-35.0),
          };
          viewer.camera.flyTo({
              destination: destination,
              orientation: orientation
          });
      }
  </script>
</head>
<body onload="init()">
<div id="mapgis-3d-viewer">
</div>
<div class="layui-panel layui-panel-right" style="width: 160px;">
  <div class="sample-button-panel">
    <button type="button" class="layui-btn layui-btn-sm layui-btn-normal" onclick="addTerrainProfile()">剖切分析</button>
    <button type="button" class="layui-btn layui-btn-sm layui-btn-danger" onclick="removeTerrainProfile()">清除</button>
  </div>
</div>
<div id="echartPanel" class="layui-panel echart-panel">
  <div class="echart-div" id="echart"></div>
</div>
<style>
  .echart-panel{
    position: absolute;
    right: 10px;
    top: 85px;
    display: none;
  }
  .echart-div{
    width: 400px;
    height: 300px;
  }
</style>
</body>
</html>
