<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no'/>
  <title>坡度坡向分析</title>
  <!--引入Cesium.js库-->
  <script src="http://localhost:8080/static/libs/cdn/cesium/Cesium.js"></script>
  <!--引入Cesium.js库相关css样式-->
  <link rel="stylesheet" href="http://localhost:8080/static/libs/cdn/cesium/Widgets/widgets.css"/>
  <link rel="stylesheet" href="http://localhost:8080/static/libs/cdn/cesium/MapGIS/css/mapgis.css"/>
  <!--示例中面板、按钮等，第三方layui的js库与css样式-->
  <script src="http://localhost:8080/static/libs/cdn/layui/layui.js"></script>
  <link rel="stylesheet" href="http://localhost:8080/static/libs/cdn/layui/css/layui.css"/>
  <!--示例公共样式-->
  <link rel="stylesheet" href="http://localhost:8080/static/libs/css/style.css"/>
  <link rel="stylesheet" href="http://localhost:8080/static/libs/css/visual.css"/>
  <link rel="stylesheet" href="http://localhost:8080/static/libs/css/analyse.css"/>
  <script>
      'use strict';
      //定义三维视图的主要类
      let viewer = null;
      //绘制多边形的工具
      let drawElement = null;
      //坡度分析
      let slopeAnalysis = null;
      //坡度坡向选择
      let slopeShowChoose = 'slope';
      //坡向箭头重复数量
      let slopeArrowRepeat = 10;

      //地图初始化函数
      function init() {
          //初始化三维球体
          initViewer();
          //添加天地图
          addTdtImage();
          //添加地形数据
          addDem();
          //展示方式select切换功能
          initSlopeShowChooseEvent();
          //添加示例UI滑动条
          addSlideBar();
      }

      //初始化三维球体
      function initViewer() {
          //构造三维视图类（视图容器div的id，三维视图设置参数）
          viewer = new Cesium.Viewer('mapgis-3d-viewer', {});
          //显示坐标高程显示
          viewer.showPosition();
          //打开深度检测
          viewer.scene.globe.depthTestAgainstTerrain = true;
      }

      //绘制一个区面，主要是为了方便得到一个polygon的点集
      function addDrawElement() {
          if (drawElement === null) {
              drawElement = new Cesium.DrawElement(viewer);
          }
          //先清除已有的分析类
          removeSlopeAnalysis();
          drawElement.startDrawingPolygon({
              callback: function (result) {
                  if (slopeAnalysis === null) {
                      slopeAnalysis = new Cesium.TerrainAnalyse(viewer, {});
                  }
                  let positions = result.positions;
                  slopeAnalysis.changeAnalyseArea(positions);
                  //关闭等值线
                  slopeAnalysis.enableContour = false;
                  //取消掉绘制
                  drawElement.stopDrawing();
                  //箭头数量
                  slopeAnalysis.aspectArrowRepeat = new Cesium.Cartesian2(slopeArrowRepeat, slopeArrowRepeat);
                  //坡度分析
                  changeSlopeAnalysisMaterial();
              }
          });
      }

      //操作面板添加一个拖动条，控制坡向箭头展示的X轴与Y轴的重复数量
      function addSlideBar() {
          layui.slider.render({
              elem: '#arrowRepeatSlider',
              value: slopeArrowRepeat,
              input: true,
              change: function (value) {
                  if (slopeAnalysis) {
                      slopeArrowRepeat = value;
                      slopeAnalysis.aspectArrowRepeat = new Cesium.Cartesian2(slopeArrowRepeat, slopeArrowRepeat);
                  }
              }
          });
      }

      //添加一个select框
      function initSlopeShowChooseEvent() {
          layui.form.on('select(slopeShowSelect)', function (data) {
              slopeShowChoose = document.getElementById("slopeShowSelect").value;
              if (slopeShowChoose === 'aspectArrow' || slopeShowChoose === 'arrowAspectSlope') {
                  document.getElementById('arrowRepeatItem').style.display = 'block';
              } else {
                  document.getElementById('arrowRepeatItem').style.display = 'none';
              }
              changeSlopeAnalysisMaterial();
          });
      }

      //改变分析结果的展现方式
      function changeSlopeAnalysisMaterial() {
          if (slopeAnalysis) {
              slopeAnalysis.updateMaterial(slopeShowChoose);
          }
      }

      //单点查询坡度坡向
      function querySlope() {
          if (slopeAnalysis === null) {
              slopeAnalysis = new Cesium.TerrainAnalyse(viewer, {});
          }
          if (drawElement) {
              drawElement.stopDrawing();
          }
          slopeAnalysis.queryInfo(querySlopeResultCallback)
      }

      //单点查询坡度坡向的结果展示
      function querySlopeResultCallback(res) {
          let aspect = res.cursor_aspect_angle;
          let slope = res.cursor_slope_angle;
          let cursor_cartographic_location = res.cursor_cartographic_location;
          // 计算经纬度;
          let latitude = cursor_cartographic_location.latitude;
          let longitude = cursor_cartographic_location.longitude;
          layer.msg(`经度:${longitude}；纬度:${latitude}；坡向:${aspect}；坡度:${slope}`);
      }

      //停止单点查询坡度坡向
      function stopQuerySlope() {
          if (slopeAnalysis) {
              slopeAnalysis.removeQueryInfo();
          }
      }

      //清除坡度坡向分析
      function removeSlopeAnalysis() {
          if (slopeAnalysis) {
              stopQuerySlope();
              slopeAnalysis.destroy();
              slopeAnalysis = null;
          }
      }

      //添加天地图影像数据
      function addTdtImage() {
                   let options = {
              //天地图URL，开发token （请到天地图官网申请自己的开发token，自带token仅做功能验证随时可能失效）
              url: "http://t0.tianditu.gov.cn/vec_w/wmts?tk=9c157e9585486c02edf817d2ecbc7752",
              //图层名称，vec：矢量底图、img：卫星影像底图、cva: 矢量注记图层（中文）、eva: 矢量注记图层（英文）、cia: 注记图层（中文）、eia: 注记图层（英文）、ter: 地形晕渲底图、cta: 注记（中文）、ibo: 全球国界
              layer: "vec",
              //瓦片样式
              style: "default",
              //比例尺
              tileMatrixSetID: "w",
              //请求格式
              format: "tiles"
          }
          viewer.imageryLayers.addImageryProvider(new Cesium.WebMapTileServiceImageryProvider(options));
      }

      //添加DEM数据
      function addDem() {
          let url = 'http://192.168.82.89:8089/igs/rest/g3d/Scene:TwTerrain';
          viewer.scene.layers.appendSceneLayer(url, {requestVertexNormals: true, autoReset: false});
          flyToTerrain();
      }

      //定位到地形
      function flyToTerrain() {
          let destination = Cesium.Cartesian3.fromDegrees(121.0076, 23.3814, 9000.0);
          let orientation = {
              pitch: Cesium.Math.toRadians(-35.0),
          };
          viewer.camera.flyTo({
              destination: destination,
              orientation: orientation
          });
      }


  </script>
</head>
<body onload="init()">
<div id="mapgis-3d-viewer">
</div>
<div class="layui-panel layui-panel-right" style="width: 440px;">
  <form class="layui-form" action="">
    <div class="sample-main-panel">
      <div class="layui-form-item">
        <label class="layui-form-label" style="color: #fff;">展示方式</label>
        <div class="layui-input-block">
          <select id="slopeShowSelect" lay-filter="slopeShowSelect">
            <option value="slope" selected>坡度面</option>
            <option value="aspectArrow">坡向箭头</option>
            <option value="arrowAspectSlope">坡度面+坡向箭头</option>
          </select>
        </div>
      </div>
      <div class="layui-form-item" id="arrowRepeatItem" style="display: none">
        <div class="slideBarDiv">
          箭头数量
          <div id="arrowRepeatSlider" class="demoSlider"></div>
        </div>
      </div>
    </div>
    <div class="sample-button-panel">
      <button type="button" class="layui-btn layui-btn-sm layui-btn-normal" onclick="addDrawElement()">绘制分析区</button>
      <button type="button" class="layui-btn layui-btn-sm layui-btn-normal" onclick="removeSlopeAnalysis()">清除</button>
      <button type="button" class="layui-btn layui-btn-sm layui-btn-normal" onclick="querySlope()">激活坡度坡向查询</button>
      <button type="button" class="layui-btn layui-btn-sm layui-btn-normal" onclick="stopQuerySlope()">取消坡度坡向查询</button>
    </div>
  </form>
</div>
<style>
  .sample-main-panel {
    height: auto;
  }

  .layui-slider {
    top: -20px;
    width: 215px;
    left: 94px;
  }

  .layui-slider-input {
    top: -34px;
  }

  .layui-form-select{
    width: 150px;
  }
</style>
</body>
</html>
